// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: playerInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PlayerInfo {

  /// <summary>Holder for reflection information generated from playerInfo.proto</summary>
  public static partial class PlayerInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for playerInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PlayerInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBwbGF5ZXJJbmZvLnByb3RvEgpwbGF5ZXJJbmZvInEKE0FuaW1hdGlvblBh",
            "cmFtZXRlcnMSEQoJaXNSdW5uaW5nGAEgASgCEg0KBWlzQWltGAIgASgIEhEK",
            "CW1vdmVtZW50WBgDIAEoAhIRCgltb3ZlbWVudFkYBCABKAISEgoKd2VhcG9u",
            "VHlwZRgFIAEoBSK4AgoKUGxheWVySW5mbxIQCghwbGF5ZXJJZBgBIAEoCRIJ",
            "CgF4GAIgASgCEgkKAXkYAyABKAISCQoBehgEIAEoAhIKCgJyeBgFIAEoAhIK",
            "CgJyeRgGIAEoAhIKCgJyehgHIAEoAhINCgVzcGVlZBgIIAEoAhIKCgJocBgJ",
            "IAEoAhIVCg1yb3RhdGlvblNwZWVkGAogASgCEjQKD3ByZWZhYk1vZGVsVHlw",
            "ZRgLIAEoDjIbLnBsYXllckluZm8uUGxheWVyTW9kZWxUeXBlEjYKEHByZWZh",
            "YldlYXBvblR5cGUYDCABKA4yHC5wbGF5ZXJJbmZvLlBsYXllcldlYXBvblR5",
            "cGUSMwoKYW5pbVBhcmFtcxgNIAEoCzIfLnBsYXllckluZm8uQW5pbWF0aW9u",
            "UGFyYW1ldGVycyo8Cg9QbGF5ZXJNb2RlbFR5cGUSEwoPTU9ERUxfVU5ERUZJ",
            "TkVEEAASCAoETUFMRRABEgoKBkZFTUFMRRACKloKEFBsYXllcldlYXBvblR5",
            "cGUSFAoQV0VBUE9OX1VOREVGSU5FRBAAEgoKBlBJU1RPTBABEgsKB0FTU0FV",
            "TFQQAhIKCgZTTklQRVIQAxILCgdTSE9UR1VOEARCEloQc2VydmVyLWdvL3Ny",
            "Yy9wYmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::PlayerInfo.PlayerModelType), typeof(global::PlayerInfo.PlayerWeaponType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PlayerInfo.AnimationParameters), global::PlayerInfo.AnimationParameters.Parser, new[]{ "IsRunning", "IsAim", "MovementX", "MovementY", "WeaponType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PlayerInfo.PlayerInfo), global::PlayerInfo.PlayerInfo.Parser, new[]{ "PlayerId", "X", "Y", "Z", "Rx", "Ry", "Rz", "Speed", "Hp", "RotationSpeed", "PrefabModelType", "PrefabWeaponType", "AnimParams" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// 플레이어 모델 프리팹 타입 정의 (딱 2가지 타입)
  /// </summary>
  public enum PlayerModelType {
    /// <summary>
    /// 기본값 (정의되지 않은 경우)
    /// </summary>
    [pbr::OriginalName("MODEL_UNDEFINED")] ModelUndefined = 0,
    /// <summary>
    /// 남캐 프리팹 타입
    /// </summary>
    [pbr::OriginalName("MALE")] Male = 1,
    /// <summary>
    /// 여캐 프리팹 타입
    /// </summary>
    [pbr::OriginalName("FEMALE")] Female = 2,
  }

  /// <summary>
  /// 플레이어 무기 프리팹 타입 정의
  /// </summary>
  public enum PlayerWeaponType {
    /// <summary>
    /// 기본값
    /// </summary>
    [pbr::OriginalName("WEAPON_UNDEFINED")] WeaponUndefined = 0,
    /// <summary>
    /// 권총
    /// </summary>
    [pbr::OriginalName("PISTOL")] Pistol = 1,
    /// <summary>
    /// 자동소총
    /// </summary>
    [pbr::OriginalName("ASSAULT")] Assault = 2,
    /// <summary>
    /// 저격소총
    /// </summary>
    [pbr::OriginalName("SNIPER")] Sniper = 3,
    /// <summary>
    /// 샷건
    /// </summary>
    [pbr::OriginalName("SHOTGUN")] Shotgun = 4,
  }

  #endregion

  #region Messages
  /// <summary>
  /// 플레이어 애니메이션 파라미터 정의
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AnimationParameters : pb::IMessage<AnimationParameters>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AnimationParameters> _parser = new pb::MessageParser<AnimationParameters>(() => new AnimationParameters());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AnimationParameters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PlayerInfo.PlayerInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnimationParameters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnimationParameters(AnimationParameters other) : this() {
      isRunning_ = other.isRunning_;
      isAim_ = other.isAim_;
      movementX_ = other.movementX_;
      movementY_ = other.movementY_;
      weaponType_ = other.weaponType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnimationParameters Clone() {
      return new AnimationParameters(this);
    }

    /// <summary>Field number for the "isRunning" field.</summary>
    public const int IsRunningFieldNumber = 1;
    private float isRunning_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float IsRunning {
      get { return isRunning_; }
      set {
        isRunning_ = value;
      }
    }

    /// <summary>Field number for the "isAim" field.</summary>
    public const int IsAimFieldNumber = 2;
    private bool isAim_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsAim {
      get { return isAim_; }
      set {
        isAim_ = value;
      }
    }

    /// <summary>Field number for the "movementX" field.</summary>
    public const int MovementXFieldNumber = 3;
    private float movementX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MovementX {
      get { return movementX_; }
      set {
        movementX_ = value;
      }
    }

    /// <summary>Field number for the "movementY" field.</summary>
    public const int MovementYFieldNumber = 4;
    private float movementY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MovementY {
      get { return movementY_; }
      set {
        movementY_ = value;
      }
    }

    /// <summary>Field number for the "weaponType" field.</summary>
    public const int WeaponTypeFieldNumber = 5;
    private int weaponType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int WeaponType {
      get { return weaponType_; }
      set {
        weaponType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AnimationParameters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AnimationParameters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(IsRunning, other.IsRunning)) return false;
      if (IsAim != other.IsAim) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MovementX, other.MovementX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MovementY, other.MovementY)) return false;
      if (WeaponType != other.WeaponType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (IsRunning != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(IsRunning);
      if (IsAim != false) hash ^= IsAim.GetHashCode();
      if (MovementX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MovementX);
      if (MovementY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MovementY);
      if (WeaponType != 0) hash ^= WeaponType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IsRunning != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(IsRunning);
      }
      if (IsAim != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsAim);
      }
      if (MovementX != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(MovementX);
      }
      if (MovementY != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(MovementY);
      }
      if (WeaponType != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(WeaponType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IsRunning != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(IsRunning);
      }
      if (IsAim != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsAim);
      }
      if (MovementX != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(MovementX);
      }
      if (MovementY != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(MovementY);
      }
      if (WeaponType != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(WeaponType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (IsRunning != 0F) {
        size += 1 + 4;
      }
      if (IsAim != false) {
        size += 1 + 1;
      }
      if (MovementX != 0F) {
        size += 1 + 4;
      }
      if (MovementY != 0F) {
        size += 1 + 4;
      }
      if (WeaponType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WeaponType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AnimationParameters other) {
      if (other == null) {
        return;
      }
      if (other.IsRunning != 0F) {
        IsRunning = other.IsRunning;
      }
      if (other.IsAim != false) {
        IsAim = other.IsAim;
      }
      if (other.MovementX != 0F) {
        MovementX = other.MovementX;
      }
      if (other.MovementY != 0F) {
        MovementY = other.MovementY;
      }
      if (other.WeaponType != 0) {
        WeaponType = other.WeaponType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            IsRunning = input.ReadFloat();
            break;
          }
          case 16: {
            IsAim = input.ReadBool();
            break;
          }
          case 29: {
            MovementX = input.ReadFloat();
            break;
          }
          case 37: {
            MovementY = input.ReadFloat();
            break;
          }
          case 40: {
            WeaponType = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            IsRunning = input.ReadFloat();
            break;
          }
          case 16: {
            IsAim = input.ReadBool();
            break;
          }
          case 29: {
            MovementX = input.ReadFloat();
            break;
          }
          case 37: {
            MovementY = input.ReadFloat();
            break;
          }
          case 40: {
            WeaponType = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 요청, 응답으로 사용할 플레이어의 정보
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PlayerInfo : pb::IMessage<PlayerInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerInfo> _parser = new pb::MessageParser<PlayerInfo>(() => new PlayerInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PlayerInfo.PlayerInfoReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerInfo(PlayerInfo other) : this() {
      playerId_ = other.playerId_;
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      rx_ = other.rx_;
      ry_ = other.ry_;
      rz_ = other.rz_;
      speed_ = other.speed_;
      hp_ = other.hp_;
      rotationSpeed_ = other.rotationSpeed_;
      prefabModelType_ = other.prefabModelType_;
      prefabWeaponType_ = other.prefabWeaponType_;
      animParams_ = other.animParams_ != null ? other.animParams_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerInfo Clone() {
      return new PlayerInfo(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private string playerId_ = "";
    /// <summary>
    /// 플레이어의 고유 ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 2;
    private float x_;
    /// <summary>
    /// X 좌표
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 3;
    private float y_;
    /// <summary>
    /// Y 좌표
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 4;
    private float z_;
    /// <summary>
    /// Z 좌표
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    /// <summary>Field number for the "rx" field.</summary>
    public const int RxFieldNumber = 5;
    private float rx_;
    /// <summary>
    /// X 축 회전
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Rx {
      get { return rx_; }
      set {
        rx_ = value;
      }
    }

    /// <summary>Field number for the "ry" field.</summary>
    public const int RyFieldNumber = 6;
    private float ry_;
    /// <summary>
    /// Y 축 회전
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Ry {
      get { return ry_; }
      set {
        ry_ = value;
      }
    }

    /// <summary>Field number for the "rz" field.</summary>
    public const int RzFieldNumber = 7;
    private float rz_;
    /// <summary>
    /// Z 축 회전
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Rz {
      get { return rz_; }
      set {
        rz_ = value;
      }
    }

    /// <summary>Field number for the "speed" field.</summary>
    public const int SpeedFieldNumber = 8;
    private float speed_;
    /// <summary>
    /// 플레이어 속도
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Speed {
      get { return speed_; }
      set {
        speed_ = value;
      }
    }

    /// <summary>Field number for the "hp" field.</summary>
    public const int HpFieldNumber = 9;
    private float hp_;
    /// <summary>
    /// 플레이어 체력
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Hp {
      get { return hp_; }
      set {
        hp_ = value;
      }
    }

    /// <summary>Field number for the "rotationSpeed" field.</summary>
    public const int RotationSpeedFieldNumber = 10;
    private float rotationSpeed_;
    /// <summary>
    /// 플레이어 회전속도
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float RotationSpeed {
      get { return rotationSpeed_; }
      set {
        rotationSpeed_ = value;
      }
    }

    /// <summary>Field number for the "prefabModelType" field.</summary>
    public const int PrefabModelTypeFieldNumber = 11;
    private global::PlayerInfo.PlayerModelType prefabModelType_ = global::PlayerInfo.PlayerModelType.ModelUndefined;
    /// <summary>
    /// 플레이어의 프리팹 타입
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PlayerInfo.PlayerModelType PrefabModelType {
      get { return prefabModelType_; }
      set {
        prefabModelType_ = value;
      }
    }

    /// <summary>Field number for the "prefabWeaponType" field.</summary>
    public const int PrefabWeaponTypeFieldNumber = 12;
    private global::PlayerInfo.PlayerWeaponType prefabWeaponType_ = global::PlayerInfo.PlayerWeaponType.WeaponUndefined;
    /// <summary>
    /// 무기 프리팹 타입
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PlayerInfo.PlayerWeaponType PrefabWeaponType {
      get { return prefabWeaponType_; }
      set {
        prefabWeaponType_ = value;
      }
    }

    /// <summary>Field number for the "animParams" field.</summary>
    public const int AnimParamsFieldNumber = 13;
    private global::PlayerInfo.AnimationParameters animParams_;
    /// <summary>
    /// 애니메이션 파라미터들
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PlayerInfo.AnimationParameters AnimParams {
      get { return animParams_; }
      set {
        animParams_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Rx, other.Rx)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Ry, other.Ry)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Rz, other.Rz)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Speed, other.Speed)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Hp, other.Hp)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RotationSpeed, other.RotationSpeed)) return false;
      if (PrefabModelType != other.PrefabModelType) return false;
      if (PrefabWeaponType != other.PrefabWeaponType) return false;
      if (!object.Equals(AnimParams, other.AnimParams)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (Rx != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Rx);
      if (Ry != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Ry);
      if (Rz != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Rz);
      if (Speed != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Speed);
      if (Hp != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Hp);
      if (RotationSpeed != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RotationSpeed);
      if (PrefabModelType != global::PlayerInfo.PlayerModelType.ModelUndefined) hash ^= PrefabModelType.GetHashCode();
      if (PrefabWeaponType != global::PlayerInfo.PlayerWeaponType.WeaponUndefined) hash ^= PrefabWeaponType.GetHashCode();
      if (animParams_ != null) hash ^= AnimParams.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (X != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Z);
      }
      if (Rx != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Rx);
      }
      if (Ry != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Ry);
      }
      if (Rz != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Rz);
      }
      if (Speed != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Speed);
      }
      if (Hp != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(Hp);
      }
      if (RotationSpeed != 0F) {
        output.WriteRawTag(85);
        output.WriteFloat(RotationSpeed);
      }
      if (PrefabModelType != global::PlayerInfo.PlayerModelType.ModelUndefined) {
        output.WriteRawTag(88);
        output.WriteEnum((int) PrefabModelType);
      }
      if (PrefabWeaponType != global::PlayerInfo.PlayerWeaponType.WeaponUndefined) {
        output.WriteRawTag(96);
        output.WriteEnum((int) PrefabWeaponType);
      }
      if (animParams_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(AnimParams);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (X != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Z);
      }
      if (Rx != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Rx);
      }
      if (Ry != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Ry);
      }
      if (Rz != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Rz);
      }
      if (Speed != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Speed);
      }
      if (Hp != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(Hp);
      }
      if (RotationSpeed != 0F) {
        output.WriteRawTag(85);
        output.WriteFloat(RotationSpeed);
      }
      if (PrefabModelType != global::PlayerInfo.PlayerModelType.ModelUndefined) {
        output.WriteRawTag(88);
        output.WriteEnum((int) PrefabModelType);
      }
      if (PrefabWeaponType != global::PlayerInfo.PlayerWeaponType.WeaponUndefined) {
        output.WriteRawTag(96);
        output.WriteEnum((int) PrefabWeaponType);
      }
      if (animParams_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(AnimParams);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Z != 0F) {
        size += 1 + 4;
      }
      if (Rx != 0F) {
        size += 1 + 4;
      }
      if (Ry != 0F) {
        size += 1 + 4;
      }
      if (Rz != 0F) {
        size += 1 + 4;
      }
      if (Speed != 0F) {
        size += 1 + 4;
      }
      if (Hp != 0F) {
        size += 1 + 4;
      }
      if (RotationSpeed != 0F) {
        size += 1 + 4;
      }
      if (PrefabModelType != global::PlayerInfo.PlayerModelType.ModelUndefined) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PrefabModelType);
      }
      if (PrefabWeaponType != global::PlayerInfo.PlayerWeaponType.WeaponUndefined) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PrefabWeaponType);
      }
      if (animParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AnimParams);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerInfo other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      if (other.Rx != 0F) {
        Rx = other.Rx;
      }
      if (other.Ry != 0F) {
        Ry = other.Ry;
      }
      if (other.Rz != 0F) {
        Rz = other.Rz;
      }
      if (other.Speed != 0F) {
        Speed = other.Speed;
      }
      if (other.Hp != 0F) {
        Hp = other.Hp;
      }
      if (other.RotationSpeed != 0F) {
        RotationSpeed = other.RotationSpeed;
      }
      if (other.PrefabModelType != global::PlayerInfo.PlayerModelType.ModelUndefined) {
        PrefabModelType = other.PrefabModelType;
      }
      if (other.PrefabWeaponType != global::PlayerInfo.PlayerWeaponType.WeaponUndefined) {
        PrefabWeaponType = other.PrefabWeaponType;
      }
      if (other.animParams_ != null) {
        if (animParams_ == null) {
          AnimParams = new global::PlayerInfo.AnimationParameters();
        }
        AnimParams.MergeFrom(other.AnimParams);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 21: {
            X = input.ReadFloat();
            break;
          }
          case 29: {
            Y = input.ReadFloat();
            break;
          }
          case 37: {
            Z = input.ReadFloat();
            break;
          }
          case 45: {
            Rx = input.ReadFloat();
            break;
          }
          case 53: {
            Ry = input.ReadFloat();
            break;
          }
          case 61: {
            Rz = input.ReadFloat();
            break;
          }
          case 69: {
            Speed = input.ReadFloat();
            break;
          }
          case 77: {
            Hp = input.ReadFloat();
            break;
          }
          case 85: {
            RotationSpeed = input.ReadFloat();
            break;
          }
          case 88: {
            PrefabModelType = (global::PlayerInfo.PlayerModelType) input.ReadEnum();
            break;
          }
          case 96: {
            PrefabWeaponType = (global::PlayerInfo.PlayerWeaponType) input.ReadEnum();
            break;
          }
          case 106: {
            if (animParams_ == null) {
              AnimParams = new global::PlayerInfo.AnimationParameters();
            }
            input.ReadMessage(AnimParams);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 21: {
            X = input.ReadFloat();
            break;
          }
          case 29: {
            Y = input.ReadFloat();
            break;
          }
          case 37: {
            Z = input.ReadFloat();
            break;
          }
          case 45: {
            Rx = input.ReadFloat();
            break;
          }
          case 53: {
            Ry = input.ReadFloat();
            break;
          }
          case 61: {
            Rz = input.ReadFloat();
            break;
          }
          case 69: {
            Speed = input.ReadFloat();
            break;
          }
          case 77: {
            Hp = input.ReadFloat();
            break;
          }
          case 85: {
            RotationSpeed = input.ReadFloat();
            break;
          }
          case 88: {
            PrefabModelType = (global::PlayerInfo.PlayerModelType) input.ReadEnum();
            break;
          }
          case 96: {
            PrefabWeaponType = (global::PlayerInfo.PlayerWeaponType) input.ReadEnum();
            break;
          }
          case 106: {
            if (animParams_ == null) {
              AnimParams = new global::PlayerInfo.AnimationParameters();
            }
            input.ReadMessage(AnimParams);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
